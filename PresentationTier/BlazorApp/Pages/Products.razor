@page "/Products"
@using global::Shared.Models
@using HttpClients.ClientInterfaces
@inject IProductService productService;
@inject NavigationManager navMgr;


@if (products == null)
{
}
else if (!products.Any())
{
    <p>No Products to display</p>
}
else
{
    <div class="shell">
        <div class="container">
            <div class="row">
                @foreach (var product in products)
                {
                    <div class="col-md-3">
                        <div class="wsk-cp-product">
                            <div class="wsk-cp-img">
                                <img src="@product.ImagePath" alt="Product" class="img-responsive" />
                            </div>
                            <div class="wsk-cp-text">
                                <div class="category">
                                    <span>@product.Category.Name</span>
                                </div>
                                <div class="title-product">
                                    <h3>@product.Name</h3>
                                </div>
                                <div class="description-prod">
                                    <p>@product.Description</p>
                                </div>
                                <div class="card-footer">
                                    <div class="wcf-left"><span class="price">@product.Price <i>dkk</i></span></div>
                                    <div class="wcf-right"><a href="#" class="buy-btn"><i class="zmdi zmdi-shopping-basket"></i></a></div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}


@code {

    private ICollection<Product> products = new List<Product>();
    private string errormsg = "";
  
  
    protected override async Task OnInitializedAsync()
    {
        try
        {
            products = await productService.GetProductsAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errormsg = e.Message;
        }
    }

}